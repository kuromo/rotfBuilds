extends layout

block content
	section#treeTop.row
		#treeTopCont.container
			h1 #{ treeTitle }
			h3 
				p #{ treeDesc }
				span.ptCount #{ points } 
				span /82

	section#treeTree.row
		#treeWrap
			#treeCont.treeSub
				.tileWrap
					each row, rId in tree
						each col, cId in row
							div(class="tile #{ col.type }" data-id="#{ rId+cId }" data-value="#{ col.val }")
								.tileCont 
									p #{ col.type }
									p #{ col.val }
			#tStatCont.treeSub
				h3 small runes
				#smRune
					button.smRune.btn.btn-default.hpSmR(  onClick="toggleSmRune('hp')" data-type:"hp")
						img.rRuneIcon(src="img/runes/hp.png")
					button.smRune.btn.btn-default.mpSmR(  onClick="toggleSmRune('mp')" data-type:"mp")
						img.rRuneIcon(src="img/runes/mp.png")
					button.smRune.btn.btn-default.attSmR(  onClick="toggleSmRune('att')" data-type:"att")
						img.rRuneIcon(src="img/runes/att.png")
					button.smRune.btn.btn-default.defSmR(  onClick="toggleSmRune('def')" data-type:"def")
						img.rRuneIcon(src="img/runes/def.png")
					button.smRune.btn.btn-default.spdSmR(  onClick="toggleSmRune('spd')" data-type:"spd")
						img.rRuneIcon(src="img/runes/spd.png")
					button.smRune.btn.btn-default.dexSmR(  onClick="toggleSmRune('dex')" data-type:"dex")
						img.rRuneIcon(src="img/runes/dex.png")
					button.smRune.btn.btn-default.vitSmR(  onClick="toggleSmRune('vit')" data-type:"vit")
						img.rRuneIcon(src="img/runes/vit.png")
					button.smRune.btn.btn-default.wisSmR(  onClick="toggleSmRune('wis')" data-type:"wis")
						img.rRuneIcon(src="img/runes/wis.png")
				h3 big runes
				#bigRunes
					.dropdown.runeSel
						button.btn.btn-default.dropdown-toggle.bigRune.collapsed(type="button" data-toggle="collapse" data-target="#runeRedDD" aria-controls="navbarDropdown" aria-expanded="false")
							img.rRuneIcon(src="img/runes/rHolder.png")
						#runeRedDD.dropdown-menu.runeDD(role="menu" aria-labelledby="classDDBtn")
							each rune, short in bRunes
								if(rune.color == "red")
									.runeDDItem(role="menuitem" onClick="") 
										img(src="img/runes/#{ short }.png") 
										.runeName #{ rune.name }
					.dropdown.runeSel
						button.btn.btn-default.dropdown-toggle.bigRune.collapsed(type="button" data-toggle="collapse" data-target="#runeGreenDD" aria-controls="navbarDropdown" aria-expanded="false")
							img.gRuneIcon(src="img/runes/gHolder.png")
						#runeGreenDD.dropdown-menu.runeDD(role="menu" aria-labelledby="classDDBtn")
							each rune, short in bRunes
								if(rune.color == "green")
									.runeDDItem(role="menuitem" onClick="") 
										img(src="img/runes/#{ short }.png") 
										.runeName #{ rune.name }
					.dropdown.runeSel
						button.btn.btn-default.dropdown-toggle.bigRune.collapsed(type="button" data-toggle="collapse" data-target="#runeBlueDD" aria-controls="navbarDropdown" aria-expanded="false")
							img.bRuneIcon(src="img/runes/bHolder.png")
						#runeBlueDD.dropdown-menu.runeDD(role="menu" aria-labelledby="classDDBtn")
							each rune, short in bRunes
								if(rune.color == "blue")
									.runeDDItem(role="menuitem" onClick="") 
										img(src="img/runes/#{ short }.png") 
										.runeName #{ rune.name } 
					.dropdown.runeSel
						button.btn.btn-default.dropdown-toggle.bigRune.collapsed(type="button" data-toggle="collapse" data-target="#runeAllDD" aria-controls="navbarDropdown" aria-expanded="false")
							img.aRuneIcon(src="img/runes/aHolder.png")
						#runeAllDD.dropdown-menu.dropdown-menu-right.runeDD(role="menu" aria-labelledby="classDDBtn")
							each rune, short in bRunes
								.runeDDItem(role="menuitem" onClick="") 
									img(src="img/runes/#{ short }.png") 
									.runeName #{ rune.name }
				h3 character stats							
				#charFrame
					.dropdown.classSec
						button.btn.btn-default.dropdown-toggle.classDDBtn.collapsed(type="button" data-toggle="collapse" data-target="#classDD" aria-controls="navbarDropdown" aria-expanded="false")
							img.classIcon(src="img/classes/holder.png")
						#classDD.dropdown-menu(role="menu" aria-labelledby="classDDBtn")
								each cls, cName in classes
									.classDDItem(role="menuitem" onClick="changeClass('#{ cName }')")
										img(src="img/classes/#{ cName }.png") 
										.className #{ cName }
					#normalStats

				#advancedStats